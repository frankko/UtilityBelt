@import "_utilitybelt.js"

var select_layers_by_name = function(context) {
  var doc = context.document;
  var page = [doc currentPage];
  var findString = UtilityBelt.util.displayPrompt(doc,"Enter text to find in a layer name…","");

  if (findString != '') {
//    if (findString.match(/^\/.+\/[a-z]+$/)) {
//      var find = new RegExp(findString);
//    } else {
      var find = findString.toLowerCase();
//    }

    var allLayers = [page children];
    var matchedLayers = [];
    var loop = [allLayers objectEnumerator];
    while (layer = [loop nextObject]) {
      var layerName = [layer name].toLowerCase();
      if (layerName.match(find)) {
        matchedLayers.push(layer);
      }
    }

    if (matchedLayers.length > 0) {
      [page deselectAllLayers];
      [page selectLayers:matchedLayers];
    }
  }
};

var select_similar_color_border = function(context) {
  var doc = context.document;
  var page = [doc currentPage];
  var selection = context.selection;

  if ([selection count] > 0) {
    var hexValue = [[[[[selection objectAtIndex:0] style] border] color] hexValue];
  } else {
    var hexValue = UtilityBelt.util.displayPrompt(doc,"Enter a hex value…","");
  }
  hexValue = UtilityBelt.util.sanitizeHexValue(hexValue);
  UtilityBelt.select.selectSimilarColorBorder(context,page,hexValue);
};

var select_similar_color_fill = function(context) {
  var doc = context.document;
  var page = [doc currentPage];
  var selection = context.selection;

  if ([selection count] > 0) {
    var selected = [selection objectAtIndex:0];
    if ([selected className] == "MSTextLayer") {
      var hexValue = [[selected textColor] hexValue];
    } else {
      var hexValue = [[[[selected style] fill] color] hexValue];
    }
  } else {
    var hexValue = UtilityBelt.util.displayPrompt(doc,"Enter a hex value…","");
  }
  hexValue = UtilityBelt.util.sanitizeHexValue(hexValue);
  UtilityBelt.select.selectSimilarColorFill(context,page,hexValue);
};

